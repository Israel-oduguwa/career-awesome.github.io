{"ast":null,"code":"import { SET_USER, LOADING_UI, LOADING_USER, CLEAR_ERRORS, SET_ERRORS } from \"../Types\";\nimport axios from \"axios\";\nexport const createUser = (userData, Router) => async dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('https://us-central1-resume-builder-startup.cloudfunctions.net/api/createAccount', userData).then(res => {\n    setAuthorizationHeader(res.data.firstIdToken);\n    storeSessionToken(res.data.refreshToken);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    Router.push('/admin/profile');\n  }).catch(err => {\n    console.log(err); // dispatch({\n    //  type: SET_ERRORS,\n    //  payload: err.response.data\n    // })\n  });\n};\nexport const editUserDetails = userDetails => async dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  const res = await axios.post('https://us-central1-resume-builder-startup.cloudfunctions.net/api/user', userDetails);\n  dispatch(getUserData());\n  console.log(res.data); //   })\n  //   .catch((err) => console.log(err));\n}; //This will fetch all the user INfo from the DataBase\n\nexport const getUserData = () => async dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get('https://us-central1-resume-builder-startup.cloudfunctions.net/api/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //This will refresh the acsess toekm\n\nexport const refreshIdToken = sessionToken => async dispatch => {\n  const res = await axios.post(`https://securetoken.googleapis.com/v1/token?key=AIzaSyBoIyQqz_8yKUFxjJO7jqBZWEslC7je7U4`, {\n    grant_type: \"refresh_token\",\n    refresh_token: sessionToken\n  });\n  console.log(res.data.access_token);\n  setAuthorizationHeader(res.data.access_token);\n  dispatch(getUserData()); // .catch((err) =>{\n  //     console.log(err)\n  // })\n}; //Set the Authorizationheader for the Jwt token and user permisssio\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};\n\nconst storeSessionToken = sessionToken => {\n  const refreshToken = sessionToken;\n  localStorage.setItem('refreshToken', refreshToken);\n}; // Update User ACcount","map":{"version":3,"sources":["C:/Users/Israel Oduguwa/Desktop/startup-server/Redux/Actions/userAction.js"],"names":["SET_USER","LOADING_UI","LOADING_USER","CLEAR_ERRORS","SET_ERRORS","axios","createUser","userData","Router","dispatch","type","post","then","res","setAuthorizationHeader","data","firstIdToken","storeSessionToken","refreshToken","getUserData","push","catch","err","console","log","editUserDetails","userDetails","get","payload","refreshIdToken","sessionToken","grant_type","refresh_token","access_token","token","FBIdToken","localStorage","setItem","defaults","headers","common"],"mappings":"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","sourcesContent":["import { SET_USER, LOADING_UI, LOADING_USER, CLEAR_ERRORS, SET_ERRORS } from \"../Types\";\r\nimport axios from \"axios\";\r\n\r\nexport const createUser = ( userData, Router ) => async (dispatch) =>{\r\n    dispatch({type:LOADING_UI});\r\n    axios.post('https://us-central1-resume-builder-startup.cloudfunctions.net/api/createAccount', userData)\r\n    .then((res)=>{\r\n        setAuthorizationHeader(res.data.firstIdToken);\r\n        storeSessionToken(res.data.refreshToken)\r\n        dispatch(getUserData());\r\n        dispatch({ type: CLEAR_ERRORS});\r\n        Router.push('/admin/profile')\r\n    })\r\n    .catch((err) =>{\r\n        console.log(err)\r\n        // dispatch({\r\n        //  type: SET_ERRORS,\r\n        //  payload: err.response.data\r\n        // })\r\n     });\r\n}\r\nexport const editUserDetails = (userDetails) => async (dispatch) => {\r\n  dispatch({ type: LOADING_USER });\r\n  const res = await axios.post('https://us-central1-resume-builder-startup.cloudfunctions.net/api/user', userDetails)      \r\n        dispatch(getUserData());\r\n        console.log(res.data)\r\n    //   })\r\n    //   .catch((err) => console.log(err));\r\n  };\r\n\r\n//This will fetch all the user INfo from the DataBase\r\nexport const getUserData = () => async (dispatch) => {\r\n    dispatch({ type: LOADING_USER})\r\n  axios.get('https://us-central1-resume-builder-startup.cloudfunctions.net/api/user')     \r\n  .then((res) =>{\r\n      \r\n    dispatch({\r\n        type: SET_USER,\r\n        payload: res.data\r\n    })\r\n  })\r\n  .catch((err) => console.log(err))\r\n   \r\n}\r\n//This will refresh the acsess toekm\r\nexport const refreshIdToken = (sessionToken) => async (dispatch) =>{\r\n    const res = await axios.post(`https://securetoken.googleapis.com/v1/token?key=AIzaSyBoIyQqz_8yKUFxjJO7jqBZWEslC7je7U4`,\r\n    {\r\n        grant_type:\"refresh_token\",        \r\n        refresh_token:sessionToken\r\n    }\r\n    )    \r\n        console.log(res.data.access_token)\r\n        setAuthorizationHeader(res.data.access_token)\r\n        dispatch(getUserData());\r\n    \r\n    // .catch((err) =>{\r\n    //     console.log(err)\r\n    // })\r\n}\r\n//Set the Authorizationheader for the Jwt token and user permisssio\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem('FBIdToken', FBIdToken);\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n  };\r\nconst storeSessionToken = (sessionToken) =>{\r\n    const refreshToken = sessionToken;\r\n    localStorage.setItem('refreshToken', refreshToken)\r\n}\r\n\r\n// Update User ACcount\r\n\r\n"]},"metadata":{},"sourceType":"module"}