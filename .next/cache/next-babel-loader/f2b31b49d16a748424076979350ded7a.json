{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react'; // import './blog.css';\n\nimport 'react-quill/dist/quill.snow.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Icon from '@material-ui/core/Icon';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport useSWR from 'swr';\nimport { withRouter, useRouter } from \"next/router\";\nimport Chip from '@material-ui/core/Chip';\nimport Card from \"@material-ui/core/Card\";\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../../../Redux/Actions/userAction\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport axios from \"axios\";\nimport fetch from \"isomorphic-unfetch\";\nimport RenderQuill from \"../../../components/WYSIWYG/RenderQuill\";\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'; // const FetchData = (props) =>{\n//     const router = useRouter()\n//     const id  = router.query.id\n//     const { data, error } = useSWR(`https://us-central1-resume-builder-startup.cloudfunctions.net/api/getBlog/${id}`)\n//     if (error) return <div></div>\n//     if(!data) return <div>LOading...</div>\n//      if(props.display){\n//       return {\n//       }\n// }\n// }\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const res = await fetch(`https://us-central1-resume-builder-startup.cloudfunctions.net/api/getBlog/${params.id}`);\n  const data = await res.json();\n  return {\n    props: {\n      blog: data\n    }\n  };\n};\nexport class editBlog extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      body: \"\",\n      loading: false,\n      // language:\"\",\n      category: [\"category\"],\n      description: \"\",\n      title: \"\",\n      message: \"\",\n      thumbnailImage: \"\",\n      imageName: \"\",\n      caption: \"\"\n    });\n\n    _defineProperty(this, \"type\", value => {\n      this.setState({\n        body: value\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handlePost\", () => {\n      // localStorage.setItem('blog', this.state.body);\n      const newBlog = {\n        body: this.state.body,\n        title: this.state.title,\n        category: this.state.category,\n        description: this.state.description,\n        thumbnail: this.state.thumbnailImage\n      };\n      axios.post(`https://us-central1-resume-builder-startup.cloudfunctions.net/api/postBlog/${this.props.blog.blogId}/update`, newBlog).then(res => {\n        this.props.getUserData();\n        this.setState({\n          message: res.data.message\n        });\n        console.log(res.data);\n        this.props.router.push('/admin/blogPosts');\n      });\n    });\n\n    _defineProperty(this, \"handlePostImageChange\", e => {\n      this.setState({\n        loading: true\n      });\n      const image = e.target.files[0];\n      const formData = new FormData();\n      formData.append('image', image, image.name);\n      axios.post('/create-pdf/resumeImage', formData).then(res => {\n        this.setState({\n          thumbnailImage: res.data.url,\n          imageName: res.data.imageName,\n          loading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"PostTimelineImage\", e => {\n      const file = document.getElementById(\"postImage\");\n      file.click();\n    });\n\n    _defineProperty(this, \"addCategory\", e => {\n      const val = e.target.value;\n\n      if (e.key === 'Enter' && val) {\n        if (this.state.category.find(category => category.toLowerCase() === val.toLowerCase())) {\n          return;\n        }\n\n        this.setState({\n          category: [...this.state.category, val]\n        });\n        this.tagInput.value = null;\n      } else if (e.key === 'Backspace' && !val) {\n        this.deleteCat(this.state.category.length - 1);\n      }\n    });\n\n    _defineProperty(this, \"deleteCat\", index => {\n      const category = [...this.state.category];\n      category.splice(index, 1); // setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n\n      this.setState({\n        category\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.user.authenticated) {\n      this.setState({\n        body: this.props.blog.body,\n        category: this.props.blog.category,\n        title: this.props.blog.title,\n        thumbnailImage: this.props.blog.thumbnail,\n        description: this.props.blog.description\n      });\n    } else {\n      this.props.router.push('/signup');\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const body = this.state.body;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(AppBar, {\n        children: /*#__PURE__*/_jsx(Toolbar, {\n          children: /*#__PURE__*/_jsx(\"h4\", {\n            children: \"BlogPost\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"container-fluid container2\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-md-9\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"title-box\",\n              children: /*#__PURE__*/_jsx(TextField, {\n                id: \"title\",\n                label: \"Title\",\n                name: \"title\",\n                onChange: this.handleChange,\n                variant: \"outlined\",\n                value: this.state.title,\n                fullWidth: true\n              })\n            }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"div\", {\n              className: \"rich-text\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"rich-text-wall\",\n                children: false ? /*#__PURE__*/_jsx(RenderQuill, {\n                  body: body,\n                  handleChange: this.type\n                }) : /*#__PURE__*/_jsx(\"div\", {\n                  children: \"Loading\"\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"right-panel\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"meta-wall\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-6 col-sm-6\",\n                    children: /*#__PURE__*/_jsx(\"div\", {\n                      className: \"language\",\n                      children: /*#__PURE__*/_jsxs(Select, {\n                        name: \"language\",\n                        id: \"language\",\n                        label: \"language\",\n                        children: [/*#__PURE__*/_jsx(MenuItem, {\n                          value: \"Website\",\n                          children: \"English\"\n                        }), /*#__PURE__*/_jsx(MenuItem, {\n                          value: \"Facebook\",\n                          children: \"French\"\n                        })]\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-6 col-sm-6\",\n                    children: /*#__PURE__*/_jsx(\"div\", {\n                      className: \"publish\",\n                      children: /*#__PURE__*/_jsx(Button, {\n                        onClick: this.handlePost,\n                        variant: \"contained\",\n                        color: \"primary\",\n                        endIcon: /*#__PURE__*/_jsx(ExpandMoreOutlinedIcon, {}),\n                        children: \"Update\"\n                      })\n                    })\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"col-md-12 scheme-input\",\n                    children: [/*#__PURE__*/_jsx(Typography, {\n                      variant: \"subtitle\",\n                      gutterBottom: true,\n                      children: \"Description\"\n                    }), /*#__PURE__*/_jsx(TextareaAutosize, {\n                      onChange: this.handleChange,\n                      name: \"description\",\n                      \"aria-label\": \"maximum height\",\n                      placeholder: \"Short description of the article\",\n                      value: this.state.description //   defaultValue=\"L\n\n                    })]\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-12 cont\",\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"categories\",\n                      children: [/*#__PURE__*/_jsx(Typography, {\n                        variant: \"subtitle\",\n                        gutterBottom: true,\n                        children: \"Categories\"\n                      }), /*#__PURE__*/_jsxs(Paper, {\n                        component: \"ul\",\n                        className: classes.root,\n                        children: [this.state.category.map((cat, index) => /*#__PURE__*/_jsx(\"li\", {\n                          children: /*#__PURE__*/_jsx(Chip, {\n                            label: cat,\n                            onDelete: () => this.deleteCat(index),\n                            className: classes.chip\n                          })\n                        }, index)), /*#__PURE__*/_jsx(TextField, {\n                          className: \"categoryText\",\n                          label: \"New category\",\n                          onKeyDown: this.addCategory,\n                          ref: c => {\n                            this.tagInput = c;\n                          },\n                          id: \"standard-size-small\",\n                          size: \"small\"\n                        })]\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"col-md-12 conts\",\n                    children: [/*#__PURE__*/_jsx(Typography, {\n                      variant: \"subtitle\",\n                      gutterBottom: true,\n                      children: \"Thumbnail Image\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      type: \"file\",\n                      id: \"postImage\",\n                      accept: \"images/*\",\n                      className: classes.postImage,\n                      multiple: true,\n                      onChange: this.handlePostImageChange,\n                      hidden: \"hidden\"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"contained-button-file\",\n                      children: /*#__PURE__*/_jsx(Button, {\n                        onClick: this.PostTimelineImage,\n                        variant: \"contained\",\n                        color: \"default\",\n                        endIcon: /*#__PURE__*/_jsx(PhotoCamera, {}),\n                        component: \"span\",\n                        children: \"Upload Image\"\n                      })\n                    }), /*#__PURE__*/_jsx(\"br\", {}), this.state.thumbnailImage === \"\" && !this.state.loading ? /*#__PURE__*/_jsx(\"p\", {}) : this.state.loading ? /*#__PURE__*/_jsx(CircularProgress, {}) : /*#__PURE__*/_jsxs(_Fragment, {\n                      children: [/*#__PURE__*/_jsx(Tooltip, {\n                        title: \"cancelImage\",\n                        children: /*#__PURE__*/_jsx(IconButton //  onClick={this.cancelImage}o\n                        , {\n                          className: classes.coverButton,\n                          children: /*#__PURE__*/_jsx(CancelIcon, {\n                            style: {\n                              fontSize: \"4vh\"\n                            }\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Card, {\n                        children: /*#__PURE__*/_jsx(CardMedia, {\n                          image: this.state.thumbnailImage,\n                          className: \"card-image2\"\n                        })\n                      })]\n                    })]\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"col-md-12 cont\",\n                    children: /*#__PURE__*/_jsx(TextField, {\n                      label: \"Caption\",\n                      onChange: this.handleChange,\n                      name: \"caption\",\n                      fullWidth: true,\n                      variant: \"outlined\"\n                    })\n                  })]\n                })\n              })\n            })\n          })]\n        })\n      })]\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(withRouter(withStyles(styles)(editBlog)));","map":null,"metadata":{},"sourceType":"module"}