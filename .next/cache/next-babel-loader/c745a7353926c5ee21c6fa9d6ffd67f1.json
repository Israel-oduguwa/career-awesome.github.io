{"ast":null,"code":"// import { useMemo } from 'react';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { createWrapper } from 'next-redux-wrapper';\nimport userReducer from \"./Reducers/userReducer\";\nimport dataReducer from \"./Reducers/dataReducer\";\nimport uiReducer from \"./Reducers/uiReducer\"; // const initialState = {};\n// const middleware = [thunk];\n\nvar reducers = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n  UI: uiReducer // externalApi:externalApiReducer\n\n}); //  const store = createStore ( \n//      reducers, \n//      initialState, \n//     compose(\n//         applyMiddleware(...middleware),\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()       \n//     )\n//  );\n\nvar initStore = function initStore(initialState, options) {\n  var composeEnhancers = compose; // const middleware = [thunk];\n\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(thunk) //Applying redux-thunk middleware\n  ));\n  return store;\n};\n\nexport default initStore;","map":{"version":3,"sources":["C:/Users/Israel Oduguwa/Desktop/startup-server/Redux/Store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createWrapper","userReducer","dataReducer","uiReducer","reducers","user","data","UI","initStore","initialState","options","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EACIC,eADJ,EACqBC,eADrB,EAEIC,OAFJ,QAEmB,OAFnB;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB,C,CAEA;AACA;;AACA,IAAMC,QAAQ,GAAGR,eAAe,CAAC;AAC7BS,EAAAA,IAAI,EAAEJ,WADuB;AAE7BK,EAAAA,IAAI,EAACJ,WAFwB;AAG7BK,EAAAA,EAAE,EAACJ,SAH0B,CAI7B;;AAJ6B,CAAD,CAAhC,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,OAAf,EAA2B;AACzC,MAAIC,gBAAgB,GAAGb,OAAvB,CADyC,CAEzC;;AAEDa,EAAAA,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cf,OAAlE;AAGC,MAAMgB,KAAK,GAAGnB,WAAW,CAACS,QAAD,EAAWK,YAAX,EAAyBE,gBAAgB,CAC9Dd,eAAe,CAACE,KAAD,CAD+C,CACvC;AADuC,GAAzC,CAAzB;AAIA,SAAOe,KAAP;AACH,CAZD;;AAaC,eAAeN,SAAf","sourcesContent":["// import { useMemo } from 'react';\r\nimport { createStore, \r\n    combineReducers, applyMiddleware, \r\n    compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { createWrapper } from 'next-redux-wrapper'\r\nimport userReducer from \"./Reducers/userReducer\";\r\nimport dataReducer from \"./Reducers/dataReducer\";\r\nimport uiReducer from \"./Reducers/uiReducer\";\r\n\r\n// const initialState = {};\r\n// const middleware = [thunk];\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data:dataReducer,\r\n    UI:uiReducer,\r\n    // externalApi:externalApiReducer\r\n});\r\n\r\n//  const store = createStore ( \r\n//      reducers, \r\n//      initialState, \r\n//     compose(\r\n//         applyMiddleware(...middleware),\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()       \r\n//     )\r\n//  );\r\n\r\n\r\nconst initStore = (initialState, options)  =>{\r\n    let composeEnhancers = compose;\r\n    // const middleware = [thunk];\r\n   \r\n   composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    \r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(\r\n        applyMiddleware(thunk) //Applying redux-thunk middleware\r\n    ));\r\n\r\n    return store;\r\n}\r\n export default initStore;"]},"metadata":{},"sourceType":"module"}