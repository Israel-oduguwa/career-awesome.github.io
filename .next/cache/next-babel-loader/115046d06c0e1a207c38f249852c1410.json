{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Israel Oduguwa\\\\Desktop\\\\startup-server\\\\pages\\\\signup.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"; // import StaticPageNavBar from \"../NavComponents/StaticPageNavbar\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getUserData } from \"../Redux/Actions/userAction\"; // import { Redirect } from \"react-router-dom\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyBoIyQqz_8yKUFxjJO7jqBZWEslC7je7U4\",\n    authDomain: \"resume-builder-startup.firebaseapp.com\"\n  });\n}\n\nexport class signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      fullName: \"\",\n      email: \"\",\n      refreshToken: \"\",\n      firstIdToken: \"\",\n      imageUrl: \"\",\n      userId: \"\"\n    });\n\n    _defineProperty(this, \"uiConfig\", {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID],\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      // if(this.props.user.authenticated){\n      //     // this.props.history.push('/admin')\n      // } \n      // else{\n      firebase.auth().onAuthStateChanged(user => {\n        // this.setState({\n        //     refreshToken:user.refreshToken,\n        //     fullName:user.providerData[0].displayName,\n        //     email:user.providerData[0].email,\n        //     imageUrl:user.providerData[0].photoURL,\n        //     firstIdToken:user._lat,\n        //     userId:user.uid\n        // })\n        // const userData = {\n        //     fullName:this.state.fullName,\n        //     email:this.state.email,\n        //     refreshToken:this.state.refreshToken,\n        //     firstIdToken:this.state.firstIdToken,\n        //     imageUrl:this.state.imageUrl,\n        //     userId:this.state.userId\n        // }\n        this.props.getUserData();\n      }); // }\n    });\n  }\n\n  render() {\n    // const  { user:{ authenticated } } = this.props\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.auth ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is AUth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n        uiConfig: this.uiConfig,\n        firebaseAuth: firebase.auth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  // UI:PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(signup);","map":{"version":3,"sources":["C:/Users/Israel Oduguwa/Desktop/startup-server/pages/signup.js"],"names":["React","Component","firebase","StyledFirebaseAuth","connect","PropTypes","getUserData","apps","length","initializeApp","apiKey","authDomain","signup","fullName","email","refreshToken","firstIdToken","imageUrl","userId","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","user","props","render","state","uiConfig","propTypes","classes","object","isRequired","func","mapStateToProps","UI"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CACA;;AAEA,IAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACvBN,EAAAA,QAAQ,CAACO,aAAT,CAAuB;AACnBC,IAAAA,MAAM,EAAC,yCADY;AAEnBC,IAAAA,UAAU,EAAC;AAFQ,GAAvB;AAIH;;AAED,OAAO,MAAMC,MAAN,SAAqBX,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAC5B;AACHY,MAAAA,QAAQ,EAAC,EADN;AAEHC,MAAAA,KAAK,EAAC,EAFH;AAGHC,MAAAA,YAAY,EAAC,EAHV;AAIHC,MAAAA,YAAY,EAAC,EAJV;AAKHC,MAAAA,QAAQ,EAAC,EALN;AAMHC,MAAAA,MAAM,EAAC;AANJ,KAD4B;;AAAA,sCASxB;AAENC,MAAAA,UAAU,EAAE,OAFN;AAINC,MAAAA,aAAa,EAAE,CACblB,QAAQ,CAACmB,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEbrB,QAAQ,CAACmB,IAAT,CAAcG,oBAAd,CAAmCD,WAFtB,EAGbrB,QAAQ,CAACmB,IAAT,CAAcI,mBAAd,CAAkCF,WAHrB,EAIbrB,QAAQ,CAACmB,IAAT,CAAcK,kBAAd,CAAiCH,WAJpB,CAJT;AAYLI,MAAAA,SAAS,EAAE;AACR;AACAC,QAAAA,2BAA2B,EAAE,MAAM;AAF3B;AAZN,KATwB;;AAAA,+CA4BlB,MAAM;AACtB;AACA;AACA;AACA;AAEI1B,MAAAA,QAAQ,CAACmB,IAAT,GAAgBQ,kBAAhB,CAAmCC,IAAI,IAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKC,KAAL,CAAWzB,WAAX;AACH,OAnBD,EANkB,CA0BtB;AAGH,KAzDqC;AAAA;;AA0DlC0B,EAAAA,MAAM,GAAG;AACL;AACA,wBACA;AAAA,gBAEI,KAAKC,KAAL,CAAWZ,IAAX,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAEA,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKa,QAAnC;AACA,QAAA,YAAY,EAAEhC,QAAQ,CAACmB,IAAT;AADd;AAAA;AAAA;AAAA;AAAA;AAJJ,qBADA;AAWH;;AAvEiC;AA0EtCT,MAAM,CAACuB,SAAP,GAAkB;AACdC,EAAAA,OAAO,EAAE/B,SAAS,CAACgC,MAAV,CAAiBC,UADZ;AAEdR,EAAAA,IAAI,EAAEzB,SAAS,CAACgC,MAAV,CAAiBC,UAFT;AAGd;AACAhC,EAAAA,WAAW,EAACD,SAAS,CAACkC,IAAV,CAAeD;AAJb,CAAlB;;AAMA,MAAME,eAAe,GAAIP,KAAD,KAAY;AAChCH,EAAAA,IAAI,EAAEG,KAAK,CAACH,IADoB;AAEhCW,EAAAA,EAAE,EAAER,KAAK,CAACQ;AAFsB,CAAZ,CAAxB;;AAIA,eAAerC,OAAO,CAACoC,eAAD,EAAkB;AAAClC,EAAAA;AAAD,CAAlB,CAAP,CAAwCM,MAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\n// import StaticPageNavBar from \"../NavComponents/StaticPageNavbar\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getUserData } from \"../Redux/Actions/userAction\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey:\"AIzaSyBoIyQqz_8yKUFxjJO7jqBZWEslC7je7U4\",\r\n        authDomain:\"resume-builder-startup.firebaseapp.com\"\r\n    })\r\n}\r\n\r\nexport class signup extends Component {\r\n    state={\r\n       fullName:\"\",\r\n       email:\"\",\r\n       refreshToken:\"\",\r\n       firstIdToken:\"\",\r\n       imageUrl:\"\", \r\n       userId:\"\"\r\n    }\r\n   uiConfig = {\r\n       \r\n        signInFlow: 'popup',\r\n        \r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n          firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n         \r\n         \r\n        ],\r\n         callbacks: {\r\n            // Avoid redirects after sign-in.\r\n            signInSuccessWithAuthResult: () => false\r\n          }\r\n        \r\n      };\r\n    //   \"AG8BCncuYyWONR4c7SP9fGmO_gINCgVWtBsE4Iik7hw_8Pudgge0wk53iQUniaIYvxfHXYRYbeCXGwSk_7c4NgTR9oV0y-44s5sGQAB4HxRLQRCAtTk6VzLzYWuSdSHbzezRvJc7FjbDsRLwNXcz2_E44t3PS8o_iesL9DAg8QT3JcwZQVQTadYcZ27Gg6FCGTLpA4xjDgA582uPc39wqn079Dp3I1f2V-g-Sf6hyu1JcIIRDCjwo19FFOC18wnFo8L0GW_au9w9YEe3NPJg5Jp6Q99nNcAvj3t7okFXNv-_A72Y59Wvg6FVctXtLErfQWjLjKJQ1zpFnfR3ZV2sDp83I1pRf2Een-nM9wp04Ew0FOw69bCait0QrFvlEBSt5bDA0C3DCuxNfVZqnToRRNMiQEWAk6oqnPV9ES-elJwkT8stDeujVsgJhOUJ1ZnVK-ygWT3TrTev\"\r\ncomponentDidMount = () => {  \r\n    // if(this.props.user.authenticated){\r\n    //     // this.props.history.push('/admin')\r\n    // } \r\n    // else{\r\n        \r\n        firebase.auth().onAuthStateChanged(user =>{  \r\n            // this.setState({\r\n            //     refreshToken:user.refreshToken,\r\n            //     fullName:user.providerData[0].displayName,\r\n            //     email:user.providerData[0].email,\r\n            //     imageUrl:user.providerData[0].photoURL,\r\n            //     firstIdToken:user._lat,\r\n            //     userId:user.uid\r\n            // })\r\n           \r\n            // const userData = {\r\n            //     fullName:this.state.fullName,\r\n            //     email:this.state.email,\r\n            //     refreshToken:this.state.refreshToken,\r\n            //     firstIdToken:this.state.firstIdToken,\r\n            //     imageUrl:this.state.imageUrl,\r\n            //     userId:this.state.userId\r\n            // }\r\n            this.props.getUserData();\r\n        })\r\n    // }\r\n\r\n\r\n}\r\n    render() {\r\n        // const  { user:{ authenticated } } = this.props\r\n        return (\r\n        <>\r\n        {\r\n            this.state.auth ?\r\n            <p>This is AUth</p>:\r\n            <StyledFirebaseAuth uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}/>\r\n        }\r\n       \r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes ={\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    // UI:PropTypes.object.isRequired,\r\n    getUserData:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\nexport default connect(mapStateToProps, {getUserData})(signup)"]},"metadata":{},"sourceType":"module"}