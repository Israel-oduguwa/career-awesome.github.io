{"ast":null,"code":"import _classCallCheck from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Israel Oduguwa\\\\Desktop\\\\startup-server\\\\components\\\\WYSIWYG\\\\RenderReactQuill.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nQuill.register('modules/blotFormatter', BlotFormatter);\nimport BlotFormatter from 'quill-blot-formatter';\n\nvar renderQuillReact = /*#__PURE__*/function (_React$Component) {\n  _inherits(renderQuillReact, _React$Component);\n\n  var _super = _createSuper(renderQuillReact);\n\n  function renderQuillReact() {\n    var _this;\n\n    _classCallCheck(this, renderQuillReact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"modules\", {\n      toolbar: [//   [{ 'header': '1'}, { 'header': '2'},],\n      [{\n        'header': [1, 2, 3, 4, 5, 6, false]\n      }], [{\n        'size': ['small', false, 'large', 'huge']\n      }], ['bold', 'italic', 'underline', 'blockquote', 'code-block'], [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }, {\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }], [{\n        'direction': 'rtl'\n      }], [{\n        'font': []\n      }], [{\n        'script': 'sub'\n      }, {\n        'script': 'super'\n      }], ['link', 'image', 'video'], [{\n        'color': []\n      }, {\n        'background': []\n      }], [{\n        'align': []\n      }], ['clean']],\n      // imageResize: {\n      //     parchment: Quill.import('parchment')\n      //     // See optional \"config\" below\n      // },\n      blotFormatter: {},\n      clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formats\", ['header', 'font', 'size', 'clean', 'direction', 'script', 'video', 'code-block', 'align', 'image', 'link', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'color', 'background']);\n\n    return _this;\n  }\n\n  _createClass(renderQuillReact, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          body = _this$props.body,\n          handleChange = _this$props.handleChange;\n      return /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        modules: this.modules,\n        formats: this.formats,\n        bounds: '.app',\n        value: body,\n        onChange: handleChange,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this);\n    }\n  }]);\n\n  return renderQuillReact;\n}(React.Component);\n\nexport default renderQuillReact;","map":{"version":3,"sources":["C:/Users/Israel Oduguwa/Desktop/startup-server/components/WYSIWYG/RenderReactQuill.js"],"names":["React","ReactQuill","Quill","register","BlotFormatter","renderQuillReact","toolbar","blotFormatter","clipboard","matchVisual","props","body","handleChange","modules","formats","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,IAAqBC,KAArB,QAAkC,aAAlC;AACA,OAAO,iCAAP;AACAA,KAAK,CAACC,QAAN,CAAe,uBAAf,EAAwCC,aAAxC;AACA,OAAOA,aAAP,MAA0B,sBAA1B;;IAEMC,gB;;;;;;;;;;;;;;;;8DAEQ;AACNC,MAAAA,OAAO,EAAE,CACT;AACA,OAAC;AAAE,kBAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB;AAAZ,OAAD,CAFS,EAGT,CAAC;AAAE,gBAAQ,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,EAA0B,MAA1B;AAAV,OAAD,CAHS,EAIP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,YAAhC,EAA6C,YAA7C,CAJO,EAMP,CAAC;AAAC,gBAAQ;AAAT,OAAD,EAAsB;AAAC,gBAAQ;AAAT,OAAtB,EAEA;AAAC,kBAAU;AAAX,OAFA,EAEkB;AAAC,kBAAU;AAAX,OAFlB,CANO,EAUR,CAAC;AAAE,qBAAa;AAAf,OAAD,CAVQ,EAWR,CAAC;AAAE,gBAAQ;AAAV,OAAD,CAXQ,EAYR,CAAC;AAAE,kBAAU;AAAZ,OAAD,EAAqB;AAAE,kBAAU;AAAZ,OAArB,CAZQ,EAaP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAbO,EAeP,CAAC;AAAE,iBAAS;AAAX,OAAD,EAAkB;AAAE,sBAAc;AAAhB,OAAlB,CAfO,EAgBP,CAAC;AAAE,iBAAS;AAAX,OAAD,CAhBO,EAiBP,CAAC,OAAD,CAjBO,CADH;AAqBN;AACA;AACA;AACA;AAEAC,MAAAA,aAAa,EAAE,EA1BT;AA8BNC,MAAAA,SAAS,EAAE;AACT;AACAC,QAAAA,WAAW,EAAE;AAFJ;AA9BL,K;;8DAoCA,CACN,QADM,EACI,MADJ,EACY,MADZ,EACmB,OADnB,EAC2B,WAD3B,EACuC,QADvC,EACgD,OADhD,EACwD,YADxD,EAEN,OAFM,EAEE,OAFF,EAEU,MAFV,EAGN,MAHM,EAGE,QAHF,EAGY,WAHZ,EAGyB,QAHzB,EAGmC,YAHnC,EAIN,MAJM,EAIE,QAJF,EAIa,QAJb,EAKN,OALM,EAKG,YALH,C;;;;;;;6BAQA;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,YADR,eACQA,YADR;AAER,0BAEF,QAAC,UAAD;AACA,QAAA,KAAK,EAAC,MADN;AAEA,QAAA,OAAO,EAAE,KAAKC,OAFd;AAGA,QAAA,OAAO,EAAE,KAAKC,OAHd;AAIA,QAAA,MAAM,EAAE,MAJR;AAKA,QAAA,KAAK,EAAEH,IALP;AAMA,QAAA,QAAQ,EAAEC,YANV;AAOA,QAAA,WAAW,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,cAFE;AAYD;;;;EA5D0BZ,KAAK,CAACe,S;;AA+DrC,eAAeV,gBAAf","sourcesContent":["import React from \"react\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css'; \r\nQuill.register('modules/blotFormatter', BlotFormatter);\r\nimport BlotFormatter from 'quill-blot-formatter';\r\n\r\nclass renderQuillReact extends React.Component {\r\n\r\n    modules = {\r\n        toolbar: [\r\n        //   [{ 'header': '1'}, { 'header': '2'},],\r\n        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n        [{ 'size': ['small', false, 'large', 'huge'] }],\r\n          ['bold', 'italic', 'underline', 'blockquote','code-block'],\r\n         \r\n          [{'list': 'ordered'}, {'list': 'bullet'}, \r\n    \r\n          {'indent': '-1'}, {'indent': '+1'}, \r\n         ],\r\n         [{ 'direction': 'rtl' }], \r\n         [{ 'font': [] }],\r\n         [{ 'script': 'sub'}, { 'script': 'super' }],\r\n          ['link', 'image', 'video'],\r\n         \r\n          [{ 'color': [] }, { 'background': [] }],  \r\n          [{ 'align': [] }],\r\n          ['clean']      \r\n        ],\r\n       \r\n        // imageResize: {\r\n        //     parchment: Quill.import('parchment')\r\n        //     // See optional \"config\" below\r\n        // },\r\n\r\n        blotFormatter: {\r\n           \r\n            },\r\n          \r\n        clipboard: {\r\n          // toggle to add extra line breaks when pasting HTML:\r\n          matchVisual: false,\r\n        }\r\n      }\r\n    \r\n    formats = [\r\n        'header', 'font', 'size','clean','direction','script','video','code-block',\r\n        'align','image','link',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet',  'indent',\r\n        'color', 'background'\r\n      ]\r\n      \r\n    render () {\r\n        const { body, handleChange } = this.props\r\n      return (\r\n\r\n    <ReactQuill \r\n    theme=\"snow\"\r\n    modules={this.modules}\r\n    formats={this.formats}\r\n    bounds={'.app'}\r\n    value={body}\r\n    onChange={handleChange}\r\n    placeholder=\"\"\r\n   />\r\n      )\r\n    }\r\n  }\r\n\r\nexport default renderQuillReact;"]},"metadata":{},"sourceType":"module"}