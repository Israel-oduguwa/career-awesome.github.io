{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Israel Oduguwa\\\\Desktop\\\\startup-server\\\\components\\\\WYSIWYG\\\\RenderReactQuill.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nQuill.register('modules/blotFormatter', BlotFormatter);\nimport BlotFormatter from 'quill-blot-formatter';\n\nclass renderQuillReact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"modules\", {\n      toolbar: [//   [{ 'header': '1'}, { 'header': '2'},],\n      [{\n        'header': [1, 2, 3, 4, 5, 6, false]\n      }], [{\n        'size': ['small', false, 'large', 'huge']\n      }], ['bold', 'italic', 'underline', 'blockquote', 'code-block'], [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }, {\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }], [{\n        'direction': 'rtl'\n      }], [{\n        'font': []\n      }], [{\n        'script': 'sub'\n      }, {\n        'script': 'super'\n      }], ['link', 'image', 'video'], [{\n        'color': []\n      }, {\n        'background': []\n      }], [{\n        'align': []\n      }], ['clean']],\n      // imageResize: {\n      //     parchment: Quill.import('parchment')\n      //     // See optional \"config\" below\n      // },\n      blotFormatter: {\n        // see config options below\n        specs: [CustomImageSpec],\n        overlay: {\n          style: {\n            border: '2px solid red'\n          }\n        }\n      },\n      clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(this, \"formats\", ['header', 'font', 'size', 'clean', 'direction', 'script', 'video', 'code-block', 'align', 'image', 'link', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'color', 'background']);\n  }\n\n  render() {\n    //   const { input, label, type } = this.props\n    return (\n      /*#__PURE__*/\n      //     <ReactQuill\n      //     modules={Event.modules}\n      //     label={label}\n      //     formats={Event.formats}\n      //     {...input}\n      //     type={type}\n      //     onChange={(newValue, delta, source) => {\n      //       if (source === \"user\") {\n      //         input.onChange(newValue);\n      //       }\n      //     }}\n      //     onBlur={(range, source, quill) => {\n      //       input.onBlur(quill.getHTML());\n      //     }}\n      //   />\n      _jsxDEV(ReactQuill, {\n        theme: \"snow\" //    onChange={this.type}\n        ,\n        modules: this.modules,\n        formats: this.formats,\n        bounds: '.app',\n        value: this.state.body,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    );\n  }\n\n}\n\nEvent.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [\"bold\", \"italic\", \"underline\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"], [\"code-block\"]],\n  imageDrop: true,\n  imageResize: {\n    handleStyles: {\n      backgroundColor: \"black\",\n      border: \"none\",\n      color: \"white\"\n    },\n    modules: [\"Resize\", \"DisplaySize\", \"Toolbar\"]\n  }\n};\nEvent.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"blockquote\", \"list\", \"bullet\", \"link\", \"image\", \"video\", \"code-block\"];\nexport default renderQuillReact;","map":{"version":3,"sources":["C:/Users/Israel Oduguwa/Desktop/startup-server/components/WYSIWYG/RenderReactQuill.js"],"names":["React","ReactQuill","Quill","register","BlotFormatter","renderQuillReact","Component","toolbar","blotFormatter","specs","CustomImageSpec","overlay","style","border","clipboard","matchVisual","render","modules","formats","state","body","Event","header","font","list","imageDrop","imageResize","handleStyles","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nQuill.register('modules/blotFormatter', BlotFormatter);\r\nimport BlotFormatter from 'quill-blot-formatter';\r\nclass renderQuillReact extends React.Component {\r\n\r\n    modules = {\r\n        toolbar: [\r\n        //   [{ 'header': '1'}, { 'header': '2'},],\r\n        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n        [{ 'size': ['small', false, 'large', 'huge'] }],\r\n          ['bold', 'italic', 'underline', 'blockquote','code-block'],\r\n         \r\n          [{'list': 'ordered'}, {'list': 'bullet'}, \r\n    \r\n          {'indent': '-1'}, {'indent': '+1'}, \r\n         ],\r\n         [{ 'direction': 'rtl' }], \r\n         [{ 'font': [] }],\r\n         [{ 'script': 'sub'}, { 'script': 'super' }],\r\n          ['link', 'image', 'video'],\r\n         \r\n          [{ 'color': [] }, { 'background': [] }],  \r\n          [{ 'align': [] }],\r\n          ['clean']      \r\n        ],\r\n       \r\n        // imageResize: {\r\n        //     parchment: Quill.import('parchment')\r\n        //     // See optional \"config\" below\r\n        // },\r\n\r\n        blotFormatter: {\r\n            // see config options below\r\n            specs: [\r\n                CustomImageSpec,\r\n              ],\r\n              overlay: {\r\n                style: {\r\n                  border: '2px solid red',\r\n                }\r\n              }\r\n            },\r\n          \r\n        clipboard: {\r\n          // toggle to add extra line breaks when pasting HTML:\r\n          matchVisual: false,\r\n        }\r\n      }\r\n    \r\n    formats = [\r\n        'header', 'font', 'size','clean','direction','script','video','code-block',\r\n        'align','image','link',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet',  'indent',\r\n        'color', 'background'\r\n      ]\r\n      \r\n    render () {\r\n  \r\n    //   const { input, label, type } = this.props\r\n      return (\r\n    //     <ReactQuill\r\n    //     modules={Event.modules}\r\n    //     label={label}\r\n    //     formats={Event.formats}\r\n    //     {...input}\r\n    //     type={type}\r\n    //     onChange={(newValue, delta, source) => {\r\n    //       if (source === \"user\") {\r\n    //         input.onChange(newValue);\r\n    //       }\r\n    //     }}\r\n    //     onBlur={(range, source, quill) => {\r\n    //       input.onBlur(quill.getHTML());\r\n    //     }}\r\n    //   />\r\n    <ReactQuill \r\n    theme=\"snow\"\r\n//    onChange={this.type}\r\n    modules={this.modules}\r\n    formats={this.formats}\r\n    bounds={'.app'}\r\n    value={this.state.body}\r\n    placeholder=\"\"\r\n   />\r\n      )\r\n    }\r\n  }\r\n\r\n\r\nEvent.modules = {\r\n  toolbar: [\r\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\r\n    [\"bold\", \"italic\", \"underline\", \"blockquote\"],\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [\"link\", \"image\", \"video\"],\r\n    [\"clean\"],\r\n    [\"code-block\"]\r\n  ],\r\n  imageDrop: true,\r\n  imageResize: {\r\n    handleStyles: {\r\n      backgroundColor: \"black\",\r\n      border: \"none\",\r\n      color: \"white\"\r\n    },\r\n    modules: [\"Resize\", \"DisplaySize\", \"Toolbar\"]\r\n  }\r\n};\r\n\r\nEvent.formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n  \"code-block\"\r\n];\r\n\r\nexport default renderQuillReact;"]},"metadata":{},"sourceType":"module"}