{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Israel Oduguwa\\\\Desktop\\\\startup-server\\\\components\\\\NavBar\\\\NavLinks.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from 'react-router-dom/Link';\nimport PropTypes from 'prop-types'; // NavBar Drawer\n\nimport IconButton from '@material-ui/core/IconButton';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  navLinks: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    },\n    justifyContent: \"space-around\",\n    width: \"54%\"\n  }\n});\n\nexport class NavLinks extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      anchor: false\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.setState({\n        anchor: true\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        anchor: false\n      });\n    });\n\n    _defineProperty(this, \"toggleDrawer\", event => {\n      if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      this.setState({\n        anchor: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const link = [{\n      id: \"1\",\n      Name: \"Blog\",\n      href: \"./page/blog\",\n      url: \"/blog\"\n    }, {\n      id: \"2\",\n      Name: \"Contact Us\",\n      href: \"./pages/ContactUs\",\n      url: \"/ContactUs\"\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navLinks,\n        children: link.map(links => /*#__PURE__*/_jsxDEV(Link, {\n          as: links.url,\n          href: links.href,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"navBarLinks\",\n            variant: \"body1\",\n            color: \"inherit\",\n            noWrap: true,\n            children: links.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: this.handleOpen,\n        className: \"MenuButton\",\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: \"left\",\n        className: \"NavDrawer\",\n        open: this.state.anchor,\n        onClose: this.handleClose,\n        onOpen: this.handleOpen,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"presentation\",\n          className: classes.List,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: link.map(links => /*#__PURE__*/_jsxDEV(Link, {\n              as: links.url,\n              href: links.href,\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: this.handleClose,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: links.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nStaticNavbarLinks.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NavLinks);","map":{"version":3,"sources":["C:/Users/Israel Oduguwa/Desktop/startup-server/components/NavBar/NavLinks.js"],"names":["React","Component","Typography","withStyles","Link","PropTypes","IconButton","SwipeableDrawer","Divider","MenuIcon","ListItemText","List","ListItem","styles","theme","grow","flexGrow","navLinks","display","breakpoints","up","justifyContent","width","NavLinks","anchor","setState","event","type","key","render","classes","props","link","id","Name","href","url","map","links","handleOpen","state","handleClose","StaticNavbarLinks","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from 'react-router-dom/Link';\r\nimport PropTypes from 'prop-types';\r\n// NavBar Drawer\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nconst styles = (theme) =>({\r\n   grow:{\r\n    flexGrow: 1,\r\n   },\r\n   navLinks: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n    justifyContent:\"space-around\",\r\n    width:\"54%\"\r\n  },\r\n})\r\n\r\nexport class NavLinks extends Component {\r\n        state={\r\n                anchor:false\r\n            }\r\n        \r\n           handleOpen = () =>{\r\n            this.setState({\r\n                anchor:true\r\n            })\r\n           }\r\n            handleClose = () =>{\r\n                this.setState({\r\n                    anchor:false\r\n                })\r\n            }\r\n          toggleDrawer = (event) => {\r\n                if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n                  return;\r\n                }\r\n                this.setState({\r\n                    anchor:true\r\n                })\r\n            }\r\n    render() {\r\n        const {classes} = this.props\r\n        const link = [\r\n          {\r\n            id:\"1\",\r\n            Name:\"Blog\",\r\n            href:\"./page/blog\",\r\n            url:\"/blog\"\r\n          },\r\n          {\r\n            id:\"2\",\r\n            Name:\"Contact Us\",\r\n            href:\"./pages/ContactUs\",\r\n            url:\"/ContactUs\"\r\n          }\r\n        ]\r\n        return (         \r\n                <>\r\n                 <div className={classes.navLinks}>\r\n                   {\r\n                     link.map((links) =>(\r\n                       <Link as={links.url} href={links.href}>\r\n                         <Typography className=\"navBarLinks\"  variant=\"body1\" color=\"inherit\" noWrap>\r\n           {links.Name}\r\n          </Typography>    \r\n                       </Link>\r\n                     ))\r\n                   }        \r\n          {/* <button onClick={darkModes}>DarkMode</button> */}         \r\n                 </div>\r\n                 <IconButton onClick={this.handleOpen} className=\"MenuButton\"><MenuIcon/></IconButton>\r\n                 <SwipeableDrawer\r\n            anchor=\"left\"\r\n            className=\"NavDrawer\"\r\n            open={this.state.anchor}\r\n            onClose={this.handleClose}\r\n            onOpen={this.handleOpen}>\r\n                     <div             \r\n              role=\"presentation\"\r\n              className={classes.List}            \r\n            >\r\n                    <List>\r\n                      {\r\n                        link.map((links) =>(\r\n                          <Link as={links.url} href={links.href}>\r\n                            <ListItem button  onClick={this.handleClose}>\r\n                            <ListItemText primary={links.Name}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                          </Link>\r\n                        ))\r\n                      }                   \r\n                    </List>\r\n            </div>\r\n            </SwipeableDrawer>\r\n           \r\n          </>\r\n        )\r\n    }\r\n}\r\nStaticNavbarLinks.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n\r\nexport default withStyles(styles)(NavLinks)"]},"metadata":{},"sourceType":"module"}