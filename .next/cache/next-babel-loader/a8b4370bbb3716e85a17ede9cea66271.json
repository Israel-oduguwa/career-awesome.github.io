{"ast":null,"code":"import _classCallCheck from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/Israel Oduguwa/Desktop/startup-server/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nQuill.register('modules/blotFormatter', BlotFormatter);\nimport BlotFormatter from 'quill-blot-formatter';\n\nvar renderQuillReact = /*#__PURE__*/function (_React$Component) {\n  _inherits(renderQuillReact, _React$Component);\n\n  var _super = _createSuper(renderQuillReact);\n\n  function renderQuillReact() {\n    var _this;\n\n    _classCallCheck(this, renderQuillReact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"modules\", {\n      toolbar: [//   [{ 'header': '1'}, { 'header': '2'},],\n      [{\n        'header': [1, 2, 3, 4, 5, 6, false]\n      }], [{\n        'size': ['small', false, 'large', 'huge']\n      }], ['bold', 'italic', 'underline', 'blockquote', 'code-block'], [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }, {\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }], [{\n        'direction': 'rtl'\n      }], [{\n        'font': []\n      }], [{\n        'script': 'sub'\n      }, {\n        'script': 'super'\n      }], ['link', 'image', 'video'], [{\n        'color': []\n      }, {\n        'background': []\n      }], [{\n        'align': []\n      }], ['clean']],\n      // imageResize: {\n      //     parchment: Quill.import('parchment')\n      //     // See optional \"config\" below\n      // },\n      blotFormatter: {},\n      clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formats\", ['header', 'font', 'size', 'clean', 'direction', 'script', 'video', 'code-block', 'align', 'image', 'link', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'color', 'background']);\n\n    return _this;\n  }\n\n  _createClass(renderQuillReact, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          body = _this$props.body,\n          handleChange = _this$props.handleChange;\n      return /*#__PURE__*/_jsx(ReactQuill, {\n        theme: \"snow\",\n        modules: this.modules,\n        formats: this.formats,\n        bounds: '.app',\n        value: body,\n        onChange: handleChange,\n        placeholder: \"\"\n      });\n    }\n  }]);\n\n  return renderQuillReact;\n}(React.Component);\n\nexport default renderQuillReact;","map":null,"metadata":{},"sourceType":"module"}